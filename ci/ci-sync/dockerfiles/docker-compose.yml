# --- jenkins configuration
jenkins:
  build: "./ci-jenkins"
  ports:
   - "8080:8080"
   - "50000:50000"
  tty: true
  volumes:
   -  /opt/ci-sync/jenkins_home/:/var/jenkins_home
   -  /opt/ci-sync/dockerfiles/:/opt/ci-sync/dockerfiles
   -  /var/run/docker.sock:/var/run/docker.sock
   -  /usr/bin/docker:/usr/bin/docker
   -  /usr/lib/libdevmapper.so.1.02:/usr/lib/libdevmapper.so.1.02
   -  /usr/lib/x86_64-linux-gnu/libapparmor.so.1:/usr/lib/x86_64-linux-gnu/libapparmor.so.1
  links:
  - sonarqube
  - db-sonarqube
  - db-integration-test
  - appserver-system-test
  - db-system-test
  
# --- application server for system tests
appserver-system-test:
  build: "./ci-payara"
  ports:
   - "4848:4848"
   - "8009:8009"
   - "8081:8081"
   - "8181:8181"
  # the application server cannot start without tty
  tty: true
  links:
   - db-system-test

# --- database MariaDB for system tests
db-system-test:
   image: mariadb
   environment:
    - MYSQL_ROOT_PASSWORD=dbst
    - MYSQL_DATABASE=dbst
    - MYSQL_USER=dbst
    - MYSQL_PASSWORD=dbst
   volumes:
    - /opt/mariadb-config:/etc/mysql/conf.d

# --- database MariaDB for integration tests
db-integration-test:
   image: mariadb
   ports:
    - "3306:3306"
   environment:
    - MYSQL_ROOT_PASSWORD=dbit
    - MYSQL_DATABASE=dbit
    - MYSQL_USER=dbit
    - MYSQL_PASSWORD=dbit
   volumes:
    - /opt/mariadb-config:/etc/mysql/conf.d

# --- sonarqube
sonarqube:
  image: sonarqube
  ports:
   - "9000:9000"
  links:
   - db-sonarqube
  environment:
   - SONARQUBE_JDBC_URL=jdbc:postgresql://db-sonarqube:5432/sonar
  volumes:  
   - /opt/sonarqube/lib/bundled-plugins
   - /opt/ci-sync/sonarqube_home/extensions/:/opt/sonarqube/extensions

 # --- database for sonarqube
db-sonarqube:
  image: postgres
  environment:
   - POSTGRES_USER=sonar
   - POSTGRES_PASSWORD=sonar
   - PGDATA=/var/lib/postgresql/data/pgdata
  volumes:
   - /opt/db-sonarqube-data/:/var/lib/postgresql/data/pgdata
